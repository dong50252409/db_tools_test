[
    {attribute, 1, file, {"j:/projects/db_tools_test/apps/db_tools_test/src/test_db_ets_1.erl", 1}},
    {attribute, 7, module, test_db_ets_1},
    {attribute, 9, behaviour, gen_server},
    {attribute, 1, file, {"j:/projects/db_tools_test/_build/default/lib/db_tools_test/include/test_table.hrl", 1}},
    {attribute, 11, export_type, [{test_table, 0}]},
    {attribute, 13, type,
        {test_table,
            {type, 13, map,
                [{type, 14, map_field_exact, [{atom, 14, field_1}, {type, 14, integer, []}]},
                    {type, 15, map_field_exact, [{atom, 15, field_2}, {type, 15, integer, []}]},
                    {type, 16, map_field_exact,
                        [{atom, 16, field_3},
                            {remote_type, 16, [{atom, 16, unicode}, {atom, 16, chardata}, []]}]},
                    {type, 17, map_field_exact, [{atom, 17, field_4}, {type, 17, integer, []}]},
                    {type, 18, map_field_exact,
                        [{atom, 18, field_5},
                            {remote_type, 18, [{atom, 18, jsx}, {atom, 18, json_term}, []]}]},
                    {type, 19, map_field_exact,
                        [{atom, 19, field_6},
                            {remote_type, 19, [{atom, 19, unicode}, {atom, 19, chardata}, []]}]},
                    {type, 20, map_field_exact, [{atom, 20, field_7}, {type, 20, binary, []}]},
                    {type, 21, map_field_exact,
                        [{atom, 21, ext_field_1}, {type, 21, integer, []}]},
                    {type, 22, map_field_exact, [{atom, 22, ext_field_2}, {type, 22, list, []}]},
                    {type, 23, map_field_exact, [{atom, 23, ext_field_3}, {type, 23, tuple, any}]},
                    {type, 24, map_field_exact,
                        [{atom, 24, ext_field_4}, {type, 24, binary, []}]}]},
            []}},
    {attribute, 27, record,
        {test_table,
            [{typed_record_field,
                {record_field, 28, {atom, 28, field_1}},
                {type, 28, integer, []}},
                {typed_record_field,
                    {record_field, 29, {atom, 29, field_2}},
                    {type, 29, integer, []}},
                {typed_record_field,
                    {record_field, 30, {atom, 30, field_3}, {nil, 30}},
                    {remote_type, 30, [{atom, 30, unicode}, {atom, 30, chardata}, []]}},
                {typed_record_field,
                    {record_field, 31, {atom, 31, field_4}, {integer, 31, 0}},
                    {type, 31, integer, []}},
                {typed_record_field,
                    {record_field, 32, {atom, 32, field_5}},
                    {remote_type, 32, [{atom, 32, jsx}, {atom, 32, json_term}, []]}},
                {typed_record_field,
                    {record_field, 33, {atom, 33, field_6}},
                    {remote_type, 33, [{atom, 33, unicode}, {atom, 33, chardata}, []]}},
                {typed_record_field,
                    {record_field, 34, {atom, 34, field_7}},
                    {type, 34, binary, []}},
                {typed_record_field,
                    {record_field, 35, {atom, 35, ext_field_1}, {integer, 35, 0}},
                    {type, 35, integer, []}},
                {typed_record_field,
                    {record_field, 36, {atom, 36, ext_field_2}, {nil, 36}},
                    {type, 36, list, []}},
                {typed_record_field,
                    {record_field, 37, {atom, 37, ext_field_3}, {tuple, 37, []}},
                    {type, 37, tuple, any}},
                {typed_record_field,
                    {record_field, 38, {atom, 38, ext_field_4}, {bin, 38, []}},
                    {type, 38, binary, []}}]}},
    {attribute, 11, file, {"j:/projects/db_tools_test/apps/db_tools_test/src/test_db_ets_1.erl", 11}},
    {attribute, 1, file, {"c:/Program Files/erl-23.2/lib/stdlib-3.14/include/ms_transform.hrl", 1}},
    {attribute, 12, file, {"j:/projects/db_tools_test/apps/db_tools_test/src/test_db_ets_1.erl", 12}},
    {attribute, 16, export, [{start_link, 1}, {do_delete_all_objects, 1}]},
    {attribute, 17, export, [{init, 1}, {handle_call, 3}, {handle_cast, 2}, {handle_info, 2}]},
    {attribute, 19, export, [{do_insert, 1}, {do_insert_new, 1}, {do_insert_update, 1}, {do_update_counter, 1}, {do_update_element, 1}, {do_select_replace, 1}, {do_delete, 1}, {do_delete_object, 1}, {do_select_delete, 1}, {do_take, 1}, {do_delete_table, 1}]},
    {function, 30, start_link, 1, [{clause, 30, [{var, 30, 'Options'}], [], [{call, 31, {remote, 31, {atom, 31, gen_server}, {atom, 31, start_link}}, [{tuple, 31, [{atom, 31, local}, {atom, 31, test_db_ets_1}]}, {atom, 31, test_db_ets_1}, {var, 31, 'Options'}, {nil, 31}]}]}]},
    {function, 34, init, 1,
        [{clause, 34,
            [{var, 34, 'Options'}],
            [],
            [
                {match, 35,
                    {var, 35, 'Tab'},
                    {call, 35,
                        {remote, 35, {atom, 35, ets}, {atom, 35, new}},
                        [
                            {atom, 35, test_table},
                            {cons, 35, {atom, 35, named_table}, {cons, 35, {atom, 35, set}, {cons, 35, {tuple, 35, [{atom, 35, keypos}, {record_index, 35, test_table, {atom, 35, field_1}}]}, {nil, 35}}}}
                        ]}},

                {match, 36,
                    {atom, 36, ok},
                    {call, 36,
                        {remote, 36, {atom, 36, db_ets}, {atom, 36, reg_select}},
                        [
                            {atom, 36, test_table},
                            {atom, 36, test_db},
                            {atom, 36, test_table},
                            {nil, 36},
                            {var, 36, 'Options'}
                        ]}},

                {tuple, 37,
                    [{atom, 37, ok},
                        {map, 37, [{map_field_assoc, 37, {atom, 37, tab}, {var, 37, 'Tab'}}]}]}]}]},
    {function, 39, handle_call, 3,
        [{clause, 39,
            [{var, 39, '_Request'}, {var, 39, '_From'}, {var, 39, 'State'}],
            [],
            [{tuple, 40, [{atom, 40, reply}, {atom, 40, ok}, {var, 40, 'State'}]}]}]},
    {function, 42, handle_cast, 2,
        [{clause, 42,
            [{var, 42, '_Request'}, {var, 42, 'State'}],
            [],
            [{tuple, 43, [{atom, 43, noreply}, {var, 43, 'State'}]}]}]},
    {function, 45, handle_info, 2,
        [{clause, 45,
            [{var, 45, '_Info'}, {var, 45, 'State'}],
            [],
            [{call, 46,
                {remote, 46, {atom, 46, io}, {atom, 46, format}},
                [{string, 46, "INFOL:~w~n"}, {cons, 46, {var, 46, '_Info'}, {nil, 46}}]},
                {tuple, 47, [{atom, 47, noreply}, {var, 47, 'State'}]}]}]},
    {function, 53, do_insert, 1,
        [{clause, 53,
            [{match, 53,
                {map, 53, [{map_field_exact, 53, {atom, 53, tab}, {var, 53, 'Tab'}}]},
                {var, 53, 'State'}}],
            [],
            [{match, 54,
                {var, 54, 'RecordList'},
                {lc, 54,
                    {call, 54,
                        {remote, 54, {atom, 54, db_tools_test_util}, {atom, 54, new_record}},
                        []},
                    [{generate, 54,
                        {var, 54, '_'},
                        {call, 54,
                            {remote, 54, {atom, 54, lists}, {atom, 54, seq}},
                            [{integer, 54, 1}, {integer, 54, 10}]}}]}},
                {call, 55,
                    {remote, 55, {atom, 55, ets}, {atom, 55, insert}},
                    [{var, 55, 'Tab'}, {var, 55, 'RecordList'}]},
                {map, 56,
                    {var, 56, 'State'},
                    [{map_field_assoc, 56,
                        {atom, 56, keys},
                        {lc, 56,
                            {record_field, 56, {var, 56, 'Record'}, test_table, {atom, 56, field_1}},
                            [{generate, 56, {var, 56, 'Record'}, {var, 56, 'RecordList'}}]}}]}]}]},
    {function, 58, do_insert_new, 1,
        [{clause, 58,
            [{match, 58,
                {map, 58,
                    [{map_field_exact, 58, {atom, 58, tab}, {var, 58, 'Tab'}},
                        {map_field_exact, 58, {atom, 58, keys}, {var, 58, 'Keys'}}]},
                {var, 58, 'State'}}],
            [],
            [{match, 59,
                {var, 59, 'Record'},
                {call, 59,
                    {remote, 59, {atom, 59, db_tools_test_util}, {atom, 59, new_record}},
                    []}},
                {call, 60,
                    {remote, 60, {atom, 60, ets}, {atom, 60, insert_new}},
                    [{var, 60, 'Tab'}, {var, 60, 'Record'}]},
                {map, 61,
                    {var, 61, 'State'},
                    [{map_field_exact, 61,
                        {atom, 61, keys},
                        {cons, 61,
                            {record_field, 61, {var, 61, 'Record'}, test_table, {atom, 61, field_1}},
                            {var, 61, 'Keys'}}}]}]}]},
    {function, 63, do_insert_update, 1,
        [{clause, 63,
            [{match, 63,
                {map, 63, [{map_field_exact, 63, {atom, 63, tab}, {var, 63, 'Tab'}}]},
                {var, 63, 'State'}}],
            [],
            [{match, 64,
                {var, 64, 'RecordList'},
                {lc, 64,
                    {call, 64,
                        {remote, 64, {atom, 64, db_tools_test_util}, {atom, 64, rand_change}},
                        [{var, 64, 'Record'}]},
                    [{generate, 64,
                        {var, 64, 'Record'},
                        {call, 64,
                            {remote, 64, {atom, 64, ets}, {atom, 64, tab2list}},
                            [{var, 64, 'Tab'}]}}]}},
                {call, 65,
                    {remote, 65, {atom, 65, ets}, {atom, 65, insert}},
                    [{var, 65, 'Tab'}, {var, 65, 'RecordList'}]},
                {var, 66, 'State'}]}]},
    {function, 68, do_update_counter, 1,
        [{clause, 68,
            [{match, 68,
                {map, 68,
                    [{map_field_exact, 68, {atom, 68, tab}, {var, 68, 'Tab'}},
                        {map_field_exact, 68, {atom, 68, keys}, {var, 68, 'Keys'}}]},
                {var, 68, 'State'}}],
            [],
            [{lc, 69,
                {block, 70,
                    [{call, 71,
                        {remote, 71, {atom, 71, ets}, {atom, 71, update_counter}},
                        [{var, 71, 'Tab'},
                            {var, 71, 'Key'},
                            {tuple, 71,
                                [{record_index, 71, test_table, {atom, 71, field_2}},
                                    {integer, 71, 1}]}]}]},
                [{generate, 72, {var, 72, 'Key'}, {var, 72, 'Keys'}}]},
                {var, 74, 'State'}]}]},
    {function, 76, do_update_element, 1,
        [{clause, 76,
            [{match, 76,
                {map, 76,
                    [{map_field_exact, 76, {atom, 76, tab}, {var, 76, 'Tab'}},
                        {map_field_exact, 76, {atom, 76, keys}, {var, 76, 'Keys'}}]},
                {var, 76, 'State'}}],
            [],
            [{lc, 77,
                {block, 78,
                    [{call, 79,
                        {remote, 79, {atom, 79, ets}, {atom, 79, update_element}},
                        [{var, 79, 'Tab'},
                            {var, 79, 'Key'},
                            {tuple, 79,
                                [{record_index, 79, test_table, {atom, 79, field_2}},
                                    {integer, 79, 1}]}]}]},
                [{generate, 80, {var, 80, 'Key'}, {var, 80, 'Keys'}}]},
                {var, 82, 'State'}]}]},
    {function, 84, do_select_replace, 1,
        [{clause, 84,
            [{match, 84,
                {map, 84, [{map_field_exact, 84, {atom, 84, tab}, {var, 84, 'Tab'}}]},
                {var, 84, 'State'}}],
            [],
            [{match, 85,
                {var, 85, 'MS'},
                {cons, 85,
                    {tuple, 85,
                        [{atom, 85, '$1'},
                            {cons, 85,
                                {tuple, 85,
                                    [{atom, 85, '=:='},
                                        {tuple, 85,
                                            [{atom, 85, 'rem'},
                                                {tuple, 85, [{atom, 85, element}, {integer, 85, 2}, {atom, 85, '$1'}]},
                                                {integer, 85, 3}]},
                                        {integer, 85, 0}]},
                                {nil, 85}},
                            {cons, 85,
                                {tuple, 85,
                                    [{tuple, 85,
                                        [{atom, 85, test_table},
                                            {tuple, 85, [{atom, 85, element}, {integer, 85, 2}, {atom, 85, '$1'}]},
                                            {tuple, 85, [{atom, 85, element}, {integer, 85, 3}, {atom, 85, '$1'}]},
                                            {bin, 85, []},
                                            {tuple, 85, [{atom, 85, element}, {integer, 85, 5}, {atom, 85, '$1'}]},
                                            {tuple, 85, [{atom, 85, element}, {integer, 85, 6}, {atom, 85, '$1'}]},
                                            {tuple, 85, [{atom, 85, element}, {integer, 85, 7}, {atom, 85, '$1'}]},
                                            {tuple, 85, [{atom, 85, element}, {integer, 85, 8}, {atom, 85, '$1'}]},
                                            {tuple, 85, [{atom, 85, element}, {integer, 85, 9}, {atom, 85, '$1'}]},
                                            {tuple, 85,
                                                [{atom, 85, element}, {integer, 85, 10}, {atom, 85, '$1'}]},
                                            {tuple, 85,
                                                [{atom, 85, element}, {integer, 85, 11}, {atom, 85, '$1'}]},
                                            {tuple, 85,
                                                [{atom, 85, element}, {integer, 85, 12}, {atom, 85, '$1'}]}]}]},
                                {nil, 85}}]},
                    {nil, 85}}},
                {call, 86,
                    {remote, 86, {atom, 86, ets}, {atom, 86, select_replace}},
                    [{var, 86, 'Tab'}, {var, 86, 'MS'}]},
                {var, 87, 'State'}]}]},
    {function, 89, do_delete, 1,
        [{clause, 89,
            [{match, 89,
                {map, 89,
                    [{map_field_exact, 89, {atom, 89, tab}, {var, 89, 'Tab'}},
                        {map_field_exact, 89,
                            {atom, 89, keys},
                            {cons, 89, {var, 89, 'Key'}, {var, 89, 'T'}}}]},
                {var, 89, 'State'}}],
            [],
            [{call, 90,
                {remote, 90, {atom, 90, ets}, {atom, 90, delete}},
                [{var, 90, 'Tab'}, {var, 90, 'Key'}]},
                {map, 91,
                    {var, 91, 'State'},
                    [{map_field_exact, 91, {atom, 91, keys}, {var, 91, 'T'}}]}]}]},
    {function, 93, do_delete_object, 1,
        [{clause, 93,
            [{match, 93,
                {map, 93,
                    [{map_field_exact, 93, {atom, 93, tab}, {var, 93, 'Tab'}},
                        {map_field_exact, 93,
                            {atom, 93, keys},
                            {cons, 93, {var, 93, 'Key'}, {var, 93, 'T'}}}]},
                {var, 93, 'State'}}],
            [],
            [{match, 94,
                {cons, 94, {var, 94, 'Record'}, {nil, 94}},
                {call, 94,
                    {remote, 94, {atom, 94, ets}, {atom, 94, lookup}},
                    [{var, 94, 'Tab'}, {var, 94, 'Key'}]}},
                {call, 95,
                    {remote, 95, {atom, 95, ets}, {atom, 95, delete_object}},
                    [{var, 95, 'Tab'}, {var, 95, 'Record'}]},
                {map, 96,
                    {var, 96, 'State'},
                    [{map_field_exact, 96, {atom, 96, keys}, {var, 96, 'T'}}]}]}]},
    {function, 98, do_select_delete, 1,
        [{clause, 98,
            [{match, 98,
                {map, 98,
                    [{map_field_exact, 98, {atom, 98, tab}, {var, 98, 'Tab'}},
                        {map_field_exact, 98, {atom, 98, keys}, {var, 98, 'Keys'}}]},
                {var, 98, 'State'}}],
            [],
            [{match, 99,
                {var, 99, 'MS'},
                {cons, 99,
                    {tuple, 99,
                        [{tuple, 99,
                            [{atom, 99, test_table},
                                {atom, 99, '$1'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'},
                                {atom, 99, '_'}]},
                            {cons, 99,
                                {tuple, 99,
                                    [{atom, 99, '=:='},
                                        {tuple, 99, [{atom, 99, 'rem'}, {atom, 99, '$1'}, {integer, 99, 2}]},
                                        {integer, 99, 0}]},
                                {nil, 99}},
                            {cons, 99, {atom, 99, true}, {nil, 99}}]},
                    {nil, 99}}},
                {call, 100,
                    {remote, 100, {atom, 100, ets}, {atom, 100, select_delete}},
                    [{var, 100, 'Tab'}, {var, 100, 'MS'}]},
                {map, 101,
                    {var, 101, 'State'},
                    [{map_field_exact, 101,
                        {atom, 101, keys},
                        {lc, 101,
                            {var, 101, 'Key'},
                            [{generate, 101, {var, 101, 'Key'}, {var, 101, 'Keys'}},
                                {op, 101, '=/=',
                                    {op, 101, 'rem', {var, 101, 'Key'}, {integer, 101, 2}},
                                    {integer, 101, 0}}]}}]}]}]},
    {function, 103, do_take, 1,
        [{clause, 103,
            [{match, 103,
                {map, 103,
                    [{map_field_exact, 103, {atom, 103, tab}, {var, 103, 'Tab'}},
                        {map_field_exact, 103,
                            {atom, 103, keys},
                            {cons, 103, {var, 103, 'Key'}, {var, 103, 'T'}}}]},
                {var, 103, 'State'}}],
            [],
            [{match, 104,
                {cons, 104, {var, 104, '_Record'}, {nil, 104}},
                {call, 104,
                    {remote, 104, {atom, 104, ets}, {atom, 104, take}},
                    [{var, 104, 'Tab'}, {var, 104, 'Key'}]}},
                {map, 105,
                    {var, 105, 'State'},
                    [{map_field_exact, 105, {atom, 105, keys}, {var, 105, 'T'}}]}]}]},
    {function, 107, do_delete_all_objects, 1,
        [{clause, 107,
            [{match, 107,
                {map, 107, [{map_field_exact, 107, {atom, 107, tab}, {var, 107, 'Tab'}}]},
                {var, 107, 'State'}}],
            [],
            [{call, 108,
                {remote, 108, {atom, 108, ets}, {atom, 108, delete_all_objects}},
                [{var, 108, 'Tab'}]},
                {map, 109,
                    {var, 109, 'State'},
                    [{map_field_exact, 109, {atom, 109, keys}, {nil, 109}}]}]}]},
    {function, 111, do_delete_table, 1,
        [{clause, 111,
            [{match, 111,
                {map, 111, [{map_field_exact, 111, {atom, 111, tab}, {var, 111, 'Tab'}}]},
                {var, 111, 'State'}}],
            [],
            [{call, 112,
                {remote, 112, {atom, 112, ets}, {atom, 112, delete}},
                [{var, 112, 'Tab'}]},
                {map, 113,
                    {var, 113, 'State'},
                    [{map_field_exact, 113, {atom, 113, tab}, {var, 113, 'Tab'}},
                        {map_field_exact, 113, {atom, 113, keys}, {nil, 113}}]}]}]},
    {eof, 114}]